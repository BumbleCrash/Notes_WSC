import os
import hashlib
import sqlite3
import subprocess
import datetime
from flask import *

app = Flask(__name__, template_folder='templates')

app.config['DATABASE'] = 'database.db'

app.secret_key=os.urandom(24)

def get_db():
        if 'db' not in g:
                g.db = sqlite3.connect(app.config['DATABASE'])
                g.db.row_factory = sqlite3.Row
        return g.db


@app.teardown_appcontext
def close_db(error):
        db = getattr(g, 'db', None)
        if db is not None:
                db.close()


@app.route('/', methods=['GET'])
def hello():
        return render_template('hello.html')


@app.route('/admin', methods=['GET'])
def admin():
        if 'username' in session:
                if session['username'] == 'admin':
                        return render_template('admin.html')
                if session['username'] == 'user':
                        return redirect(url_for('login'))
        return redirect(url_for('login'))

@app.route('/user', methods=['GET'])
def user():
        if 'username' in session:
                if session['username'] == 'admin':
                        return redirect(url_for('login'))
                if session['username'] == 'user':
                        return render_template('user.html')
        return redirect(url_for('login'))


@app.route('/login', methods=['GET', 'POST'])
def login():
        if request.method == 'POST':
                username = request.form['username']
                password = request.form['password']
                hashed_pass = hashlib.sha1(password.encode('utf-8')).hexdigest()

                db = get_db()
                cursor = db.cursor()    
                cursor.execute("SELECT password FROM users WHERE username = ?", (username,))
                rows = cursor.fetchall() 
                cursor.close() 
                #print(rows[0][0])
                if rows:
                        if rows[0][0] == hashed_pass:
                                session['username'] = username
                                if username == 'admin':
                                        return redirect(url_for('admin'))
                                if username == 'user':
                                        return redirect(url_for('user'))
                with open('app.log', 'a') as f:
                        f.write(str(datetime.datetime.now()).split('.')[0]+' Неудачная попытка входа под пользователем '+username+'. Адрес источник: '+str(request.remote_addr)+'\n')
                return render_template('login.html', error='Неудачный вход. Администратор оповещён.')
        return render_template('login.html')

if __name__ == '__main__':
        app.run(debug=True, host='0.0.0.0', port=80)




