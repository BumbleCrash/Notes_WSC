Volatility 3:

Если ищем имя подозрительного процесса
./vol.py -f 'файл' windows.pstree
Исследование дерева процессов, в целях определения наиболее подозрительных, способных оказать негативное воздействие на систему
Все найденные в памяти системные процессы требуют более тщательного анализа для определения их влияния на целевой хост, однако некоторые процессы будут явно выбиваться из общего числа.

Какой путь до процесса?
./vol.py -f '/home/kali/Desktop/memory.dmp' windows.cmdline --pid пид

К какому адресу пытался подключаться процесс?
./vol.py -f '/home/kali/Desktop/memory.dmp' windows.netscan

Какой хэш sha1 вредоносного файла.
./vol.py -f '/home/kali/Desktop/memory.dmp' windows.dumpfiles --pid пид
После смотрим хэш-сумму встроенными инструментами linux (опции - checksums)

Какой таймштамп на малвари?
exiftool '/home/kali/volatility3/file.*.exe.dat'






Volatility 2.6
Узнаем образ машины
volatility_2.6_win64_standalone.exe -f файл imageinfo
Волатилити автоматически выставляет наиболее подходящий профиль вперед
Если вдруг профиль нее определяется:
volatility_2.6_win64_standalone.exe -f файл kdbgscan и перебираем версии вручную пока не начнет подходить
Так же там подбирается KDBG виртуальный адрес образца памяти

Какие процессы активны на момент снятия дампа?
volatility_2.6_win64_standalone.exe -f файл --profile=профиль pstree

Какой пид процеса?
volatility_2.6_win64_standalone.exe -f файл --profile=профиль pslist
Тут ищеем наиболее подозрительные процессы

Очень многие процессы бывают скрыты. Поэтому нужно
volatility_2.6_win64_standalone.exe -f файл --profile=профиль psxview
Эта команда отобразит скрытые команды, их пид и их смещение, по которому будет гораздо удобнее выгружать файл

Какой путь к процессу у которого мы знаем оффсет
volatility_2.6_win64_standalone.exe -f файл --profile=профиль cmdline --offset=0x*
Выгрузить потом так же можно по оффсету
volatility_2.6_win64_standalone.exe -f файл --profile=профиль procdump --offset=0x* --dump-dir=путь

Какой процесс наиболее похож на зловред?
volatility_2.6_win64_standalone.exe -f файл --profile=профиль malfind
Указанная команда покажет множество процессов, ищем с заголовком MX
Потом выгружаем и проверяем на наличие вредоносного ПО
volatility_2.6_win64_standalone.exe -f файл --profile=профиль malfind --pid пид --dump куда
Хэш сумму файлов можно еще через 7zip получить

На какие процессы и пути в системе ссылается вредоносный файл
Пробуем выгрузить всю информацию по содержимому файла через notepad++ или strings и находим подозрительный пути

Какое имя вредоносного dll
Чтобы узнать имя вредоносного .dll файла попробуем воспользоваться инструментов ldrmodules утилиты Volatility. Он может отразить все модули, подгруженные на стороне системы при запуске процесса.
В качестве цели выбираем svchost.exe с pid 880
volatility_2.6_win64_standalone.exe -f файл --profile=профиль idrmodules --pid пид 
Ищем модули, которые не были прописаны в системных листах InLoad, InInit, InMem 
